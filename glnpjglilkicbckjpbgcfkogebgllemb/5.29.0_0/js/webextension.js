Okta.WebExtension=function(session,persistent,request,browserType){var BACKGROUND_VERSION=PLUGIN_VERSIONS.currentVersion;var delay=_okta.delay,tabs={},extend=_okta.extend,each=_okta.each,filter=_okta.filter,find=_okta.find,where=_okta.where,defer=Okta.Q.defer,EventsMixin=Okta.Events,curry2=Okta.fn.base.curry2,always=Okta.fn.base.always,getMonitoredSitesApiMatchPatterns=Okta.fn.url.getMonitoredSitesApiMatchPatterns,isOktaEndUserHomeHref=Okta.fn.url.isOktaEndUserHomeHref,findAuthSite=Okta.fn.bg.findAuthSite,getLastAuthTimestamp=Okta.fn.bg.getLastAuthTimestamp,setLastAuthTimestamp=Okta.fn.bg.setLastAuthTimestamp,getBasicAuthCreds=Okta.fn.bg.getBasicAuthCreds,getPendingConsentAccount=Okta.fn.bg.getPendingConsentAccount,Url=Okta.Url,sharedJSFile="shared/shared.js",isFirefox=browserType==="firefox",isEdge=browserType==="edge",authenticationMonitor=new Okta.AuthenticationMonitor(session,persistent,request,browserType),that=extend({},EventsMixin),INJECT_SCRIPT_TO_FRAME_DELAY=1e3;var BASIC_AUTH_WAIT=2*1e3,MONITORED_SITES_STORAGE_WAIT=1e3;function getTab(r){var o=defer();chrome.tabs.query({},function e(t){var n=where(t,{id:r}).length>0;if(n){chrome.tabs.get(r,function e(t){o.resolve(t)})}else{o.resolve(null)}});return o.promise}function isHttpTab(e){return/^http/.test(e)}function injectScripts(){var n=(new Date).getTime();each(Object.keys(tabs),function(e){var t=tabs[e];if(t.timeStamp+INJECT_SCRIPT_TO_FRAME_DELAY>n){return}console.log("Injecting script. Tab id: "+t.tabId);that.trigger("injectReady",{tabId:t.id,frameId:t.frameId});delete tabs[e]});if(Object.keys(tabs).length){setTimeout(injectScripts,INJECT_SCRIPT_TO_FRAME_DELAY)}}function triggerInject(n){if(!isHttpTab(n.url)){console.log("Skipped url: "+n.url);return}getTab(n.tabId).then(function e(t){if(!t||!isHttpTab(t.url)){return}if(n.frameId){if(!Object.keys(tabs).length){setTimeout(injectScripts,INJECT_SCRIPT_TO_FRAME_DELAY)}tabs[n.tabId]={tabId:n.tabId,frameId:n.frameId,timeStamp:n.timeStamp};console.log("Tabs: "+JSON.stringify(tabs));return}that.trigger("injectReady",{tabId:t.id,frameId:n.frameId})})}function triggerContentMessage(e,t){that.trigger("messageFromContent",{msg:t,tabId:e.sender&&e.sender.tab?e.sender.tab.id:-1,portInfo:{port:e}})}function onBeforeSendHeaders(e){var t="X-Okta-User-Agent-Extended",n="okta-browser-plugin/"+BACKGROUND_VERSION,r={requestHeaders:[]},o="X-Okta-User-Agent-Account-Data";if(e.requestHeaders){r.requestHeaders=e.requestHeaders}try{if(isOktaEndUserHomeHref&&isOktaEndUserHomeHref(e.url)){var i=find(r.requestHeaders,function(e){return e.name.toLowerCase()===t.toLowerCase()});var a=getPendingConsentAccount?getPendingConsentAccount(persistent):"";if(i){i.value+=" "+n}else{r.requestHeaders.push({name:t,value:n});r.requestHeaders.push({name:o,value:a})}}}catch(e){Log.error("WebExtension::onBeforeSendHeaders Error: "+e.message)}return r}function executeScript(tabId,script){var INJECT_IF_NO_OKTA=""+function(code,enabledLogging){if(eval("typeof Okta === 'undefined'")){eval("window.Okta = {};");eval(code);enabledLogging&&console.log("WebExtension::executeScript: "+"content script injected")}else{enabledLogging&&console.log("WebExtension::executeScript: "+"skipping eval script")}}.toString();chrome.tabs.executeScript(tabId,{code:"("+INJECT_IF_NO_OKTA+")("+JSON.stringify(script)+","+Okta.Config.enabledLogging+")",allFrames:true,runAt:"document_idle"},function(){})}function injectScript(e,t){if(t){Log.info("WebExtension::injectScript: Injecting content script from "+"persistent");executeScript(e.tabId,t)}else{Log.info("WebExtension::injectScript: Injecting content script from "+"file");var n=new XMLHttpRequest;n.open("GET",chrome.extension.getURL(sharedJSFile),true);n.overrideMimeType("text/plain");n.onload=function(){executeScript(e.tabId,n.responseText)};n.onerror=function(){Log.error("WebExtension::injectScript: Failed to load file: "+sharedJSFile)};n.send()}}function onAuthRequired(e){var r,t;r=findAuthSite(persistent,new Url(e.url));if(!r||!r.credURI){return Promise.reject()}t=getLastAuthTimestamp(session,r.authURL);if(e.timeStamp-t<BASIC_AUTH_WAIT){return Promise.reject()}setLastAuthTimestamp(session,r.authURL,e.timeStamp);return new Promise(function(t,n){getBasicAuthCreds(request,persistent,r.credURI).then(function(e){if(e&&e.u&&e.p){t({authCredentials:{username:e.u,password:e.p}})}else{n()}}).fail(n)})}function onAuthRequiredWithCallBack(e,t){onAuthRequired(e).then(function(e){t(e)}).catch(function(){t()})}function onMonitoredSitesCompleted(){delay(function(){authenticationMonitor.initialize()},MONITORED_SITES_STORAGE_WAIT)}that.getType=always(browserType);that.getBackgroundVersion=always(BACKGROUND_VERSION);that.post=function e(t){t.portInfo.port.postMessage(t.msg)};that.injectScript=function(e,t){injectScript(e,t)};that.openTab=function(e){if(!e){return}switch(browserType){case"chrome":chrome.tabs.create({url:e});break;case"edge":chrome.tabs.create({url:e.split("?")[0]});break;case"firefox":chrome.tabs.create({url:e});var t=chrome.extension.getViews({type:"popup"});if(t.length!=1){Log.warn("WebExtension::openTab: "+"Did not close popup. Windows count: "+t.length);return}t[0].close();break;default:Log.error("WebExtension::openTab: Unknown browser type!")}};that.openTabForAccountChooser=function(n){if(n){chrome.tabs.query({active:true},function(e){if(e&&e.length>0){var t=e[0];if(t.url.indexOf(n)>-1){if(isEdge){that.openTab(n);that.closeTab(t.id)}else{chrome.tabs.reload()}}else{chrome.tabs.create({url:n})}}else{chrome.tabs.create({url:n})}})}};that.servePopover=function(){console.log("serve popover");chrome.tabs.update({url:chrome.runtime.getURL("shared/popover/popover.html")})};that.closeTab=function(e){if(e){chrome.tabs.remove(e)}};that.getCookies=function(e,n){var r=defer();chrome.cookies.getAll({url:e},function(e){var t=filter(e,function(e){return n.indexOf(e.name)>-1});r.resolve(t)});return r.promise};that.updateBadge=function(e){if(e){chrome.browserAction.setBadgeText({text:e.text});if(e.color!==""){chrome.browserAction.setBadgeBackgroundColor({color:e.color})}}};that.getLocalStorageUsage=function(){var t=defer(),e=0;try{for(var n=0;n<localStorage.length;++n){e+=localStorage.getItem(localStorage.key(n)).length}Log.info("WebExtension::getLocalStorageUsage: {0} bytes used",e);t.resolve(e)}catch(e){Log.error("WebExtension::getLocalStorageUsage Error: {0}",e);t.reject(e)}return t.promise};var onMessage=curry2(triggerContentMessage),onConnect=chrome.runtime.onConnect,onCompleted=chrome.webRequest.onCompleted,onTabReplaced=chrome.webNavigation.onTabReplaced,onBeforeSendHeadersDetails={urls:["<all_urls>"]},onAuthRequiredListener=onAuthRequiredWithCallBack,onAuthRequiredInfoSpec=["asyncBlocking"];if(isFirefox){onTabReplaced=null;onAuthRequiredListener=onAuthRequired;onAuthRequiredInfoSpec=["blocking"]}if(isEdge){onBeforeSendHeadersDetails.types=["main_frame","sub_frame"];onCompleted=chrome.webNavigation.onCompleted}chrome.webNavigation.onDOMContentLoaded.addListener(triggerInject);if(onTabReplaced){onTabReplaced.addListener(triggerInject)}chrome.webRequest.onBeforeSendHeaders.addListener(onBeforeSendHeaders,onBeforeSendHeadersDetails,["requestHeaders","blocking"]);onConnect.addListener(function e(t){t.onMessage.addListener(onMessage(t))});chrome.webRequest.onAuthRequired&&chrome.webRequest.onAuthRequired.addListener(onAuthRequiredListener,{urls:["<all_urls>"]},onAuthRequiredInfoSpec);onCompleted&&onCompleted.addListener(onMonitoredSitesCompleted,{urls:getMonitoredSitesApiMatchPatterns(),types:["xmlhttprequest"]});authenticationMonitor.initialize(false);return that};