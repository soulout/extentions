class Dictionary{static init(t){this._isInitialized||(this._storageController=t||new StorageController,this._isInitialized=!0)}static get(){return this._storageController.getSettings().dictionary||[]}static _update(t){return this._storageController.updateSettings({dictionary:t})}static getSorted(){return this.get().sort((t,e)=>t.toLowerCase().localeCompare(e.toLowerCase()))}static add(t){const e=this.get();return e.push(t.trim()),browser.runtime.sendMessage({command:"ADD_WORD_TO_DICTIONARY",word:t}),this._storageController.updateSettings({dictionary:e})}static addBatch(t){browser.runtime.sendMessage({command:"BATCH_ADD_WORDS_TO_DICTIONARY",words:t});const e=this.get();return t.forEach(t=>{t&&t.trim()&&!t.trim().match(/\s/)&&e.push(t.trim())}),this._update(e)}static remove(t){const e=this.get(),r=e.indexOf(t);if(-1!==r)return browser.runtime.sendMessage({command:"REMOVE_WORD_FROM_DICTIONARY",word:t}),e.splice(r,1),this._update(e)}static clear(){return browser.runtime.sendMessage({command:"CLEAR_DICTIONARY"}),this._update([])}}Dictionary._isInitialized=!1;